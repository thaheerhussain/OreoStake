{"version":3,"sources":["components/Header.js","components/Footer.js","components/common/Button.js","components/common/Modal.js","hooks/useOnClickOutside.js","components/common/Card.js","components/common/Spinner.js","utils.js","pages/StakingPage.js","pages/StakingPage2.js","App.js","index.js"],"names":["useState","clicked","setClicked","className","href","src","width","alt","cx","onClick","window","scrollTo","document","body","style","overflowY","aria-label","aria-expanded","height","viewBox","d","target","rel","fluid","Date","getFullYear","color","bgColor","showBorder","children","uppercase","Modal","onClose","title","ref","useRef","handler","useEffect","listener","event","current","contains","addEventListener","removeEventListener","useOnClickOutside","querySelector","classList","remove","backgroundColor","top","left","zIndex","minWidth","maxWidth","noLine","Spinner","animationDuration","size","borderWidth","borderTopColor","borderBottomColor","defaultProps","initWeb3","Promise","resolve","reject","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","HomePage","loading","setLoading","stakeLoading","setStakeLoading","unstakeLoading","setUnstakeLoading","withdrawLoading","setWithdrawLoading","error","setError","setWeb3","accounts","setAccounts","leadStake","setLeadStake","leadToken","setLeadToken","totalSupply","setTotalSupply","balance","setBalance","totalStaked","setTotalStaked","stakes","setStakes","minStake","setMinStake","stakingTax","setStakingTax","unstakingTax","setUnstakingTax","registrationTax","setRegistrationTax","referralRewards","setReferralRewards","referralCount","setReferralCount","dailyROI","setDailyROI","stakingRewards","setStakeRewards","minRegister","setMinRegister","totalRewards","setTotalRewards","registeredStatus","setRegisteredStaus","amount","setAmount","unstakeAmount","setUnstakeAmount","referrer","setReferrer","showModal","setShowModal","init","isReady","eth","getAccounts","net","getId","networkId","Contract","ERC20","abi","methods","call","balanceOf","LeadStake","minimumStakeValue","stakingTaxRate","unstakingTaxRate","registered","status","on","updateAll","all","updateStakes","updateTotalSupply","updateAccountBalance","updateTotalStaked","stakeRewards","minRegisteration","totalReward","updateReferrals","updateStatus","stake","parseInt","tax","value","sum","rewards","calculateEarnings","owing","recorded","referral","actual","arg","fromExponential","approve","send","from","length","registerAndStake","code","parseFloat","unstake","withdrawEarnings","selectedAddress","networkVersion","triggerAlreadyInjectedWeb3","Button","Header","id","to","Card","toFixed","type","placeholder","onChange","e","Footer","App","path","exact","StakingPage","StakingPage2","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.0627edf9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport cx from \"classnames\";\r\n\r\nexport default () => {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const renderButton = () => {\r\n    return (\r\n      <button\r\n        className={cx(\r\n          \"menu focus:outline-none\",\r\n          clicked ? \"opened absolute z-50 top-0 right-1 mt-2\" : \"\"\r\n        )}\r\n        onClick={() => {\r\n          window.scrollTo(0, 0);\r\n          if (!clicked) {\r\n            document.body.style.overflowY = \"hidden\";\r\n          } else {\r\n            document.body.style.overflowY = \"auto\";\r\n          }\r\n          setClicked(!clicked);\r\n        }}\r\n        aria-label=\"Main Menu\"\r\n        aria-expanded={clicked}\r\n      >\r\n        <svg width=\"60\" height=\"60\" viewBox=\"0 0 100 100\">\r\n          <path\r\n            className=\"line line1\"\r\n            d=\"M 20,29.000046 H 80.000231 C 80.000231,29.000046 94.498839,28.817352 94.532987,66.711331 94.543142,77.980673 90.966081,81.670246 85.259173,81.668997 79.552261,81.667751 75.000211,74.999942 75.000211,74.999942 L 25.000021,25.000058\"\r\n          />\r\n          <path className=\"line line2\" d=\"M 20,50 H 80\" />\r\n          <path\r\n            className=\"line line3\"\r\n            d=\"M 20,70.999954 H 80.000231 C 80.000231,70.999954 94.498839,71.182648 94.532987,33.288669 94.543142,22.019327 90.966081,18.329754 85.259173,18.331003 79.552261,18.332249 75.000211,25.000058 75.000211,25.000058 L 25.000021,74.999942\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <header className=\"container px-4 mx-auto py-4\">\r\n      <div className=\"flex flex-row justify-between items-center relative\">\r\n        <a\r\n          href=\"https://whitex.tech/partner/oreo\"\r\n          className=\"logo flex flex-row items-center\"\r\n        >\r\n          <img\r\n            src=\"/images/full-logo-footer.png\"\r\n            width=\"180\"\r\n            className=\"cursor-pointer\"\r\n            alt=\"Oreo\"\r\n          />\r\n        </a>\r\n        <div className=\"cursor-pointer\">{renderButton()}</div>\r\n      </div>\r\n      <div\r\n        className={cx(\r\n          \"w-full h-full fixed inset-0 z-40  text-white font-Montserrat-ExtraBold uppercase flex-col justify-center text-4xl transition duration-500 ease-in-out\",\r\n          clicked ? \"flex bg-black\" : \"hidden bg-transparent\"\r\n        )}\r\n      >\r\n        <div className=\"flex flex-col mx-auto justify-center text-center\">\r\n          <a\r\n            className={cx(\r\n              \"transition duration-500 ease-in-out delay-500 py-4\",\r\n              clicked ? \"opacity-100\" : \"opacity-0\"\r\n            )}\r\n            href=\"#\"\r\n          >\r\n            \r\n          </a>\r\n          <a\r\n            className={cx(\r\n              \"transition duration-500 ease-in-out delay-500 py-4\",\r\n              clicked ? \"opacity-100\" : \"opacity-0\"\r\n            )}\r\n            href=\"#\"\r\n          >\r\n            #\r\n          </a>\r\n          <a\r\n            className={cx(\r\n              \"transition duration-500 ease-in-out delay-500 py-4\",\r\n              clicked ? \"opacity-100\" : \"opacity-0\"\r\n            )}\r\n            href=\"#\"\r\n          >\r\n           \r\n          </a>\r\n          <a\r\n            className={cx(\r\n              \"transition duration-500 ease-in-out delay-500 py-4\",\r\n              clicked ? \"opacity-100\" : \"opacity-0\"\r\n            )}\r\n            href=\"#\"\r\n          >\r\n            \r\n          </a>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"py-8 footer-bg\">\r\n      <footer className=\"container mx-auto px-4\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 gap-4\">\r\n          <div>\r\n            <a\r\n              href=\"https://whitex.tech/partner/oreo\"\r\n              className=\"logo flex flex-row items-center\"\r\n            >\r\n              <img\r\n                src=\"/images/full-logo-footer.png\"\r\n                width=\"220\"\r\n                className=\"cursor-pointer\"\r\n                alt=\"Oreo\"\r\n              />\r\n            </a>\r\n            <div className=\"uppercase text-white text-md mb-3 mt-4 text-left\">\r\n              Follow Us\r\n            </div>\r\n            <div className=\"flex flex-row items-center \">\r\n              <a\r\n                href=\"https://instagram.com/lead_wallet\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-instagram.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"#\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-twitter.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"https://www.reddit.com/r/LeadWallet\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-reddit.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"https://github.com/leadwallet\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-github.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"https://medium.com/@LeadWallet\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-medium.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-telegram.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-discord.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"text-white leading-7 text-xs cursor-pointer\">\r\n            <div className=\"font-Montserrat-ExtraBold uppercase\"></div>\r\n            <div>Business Console</div>\r\n            <div></div>\r\n            <div>Crypto Wallets</div>\r\n            <div>Oreo Pride</div>\r\n          </div> */}\r\n          <div className=\"text-white leading-7 text-xs cursor-pointer flex flex-col\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"font-Montserrat-ExtraBold uppercase\"\r\n            >\r\n              \r\n            </a>\r\n            {/* <div></div> */}\r\n            <a href=\"#\"></a>\r\n            <a href=\"#\"></a>\r\n            {/* <div>Ecosystem</div> */}\r\n            <a href=\"#\"></a>\r\n          </div>\r\n          {/* <div className=\"text-white leading-7 text-xs cursor-pointer\">\r\n            <div className=\"font-Montserrat-ExtraBold uppercase\">Solutions</div>\r\n            <div>Grow Your Business with our Monetization</div>\r\n            <div>Technology</div>\r\n            <div>The PSP Solution</div>\r\n            <div>Use Your Cryptocurrency</div>\r\n          </div> */}\r\n          <div className=\"text-white leading-7 text-xs cursor-pointer flex flex-col\">\r\n            <div className=\"font-Montserrat-ExtraBold uppercase\">\r\n              Documentation\r\n            </div>\r\n            <a\r\n              href=\"#\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              \r\n            </a>\r\n            <a\r\n              href=\"#\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              \r\n            </a>\r\n            <a\r\n              href=\"#\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              \r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer-copyright text-center py-3 text-white\">\r\n        <div fluid>\r\n          &copy; {new Date().getFullYear()} : <a href=\"#\">  </a>\r\n        </div>\r\n      </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\n\r\nexport default ({\r\n  color = \"white\",\r\n  bgColor = \"primary\",\r\n  showBorder = false,\r\n  onClick,\r\n  className,\r\n  children,\r\n  uppercase = true,\r\n}) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={cx(\r\n        className,\r\n        \"rounded-md px-4 py-2 mx-1 font-Montserrat-ExtraBold\",\r\n        uppercase ? \"uppercase\" : \"\",\r\n        showBorder ? \"border\" : \"\",\r\n        \"bg-\" + bgColor,\r\n        \"hover:bg-\" + bgColor + \"-hover\",\r\n        \"hover:border-\" + bgColor + \"-hover\",\r\n        \"text-\" + color,\r\n        \"hover:text-\" + color + \"-hover\",\r\n        \"border-\" + color,\r\n        \"hover:border-\" + color + \"-hover\"\r\n      )}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\nimport useOnClickOutside from \"../../hooks/useOnClickOutside\";\n\nconst Modal = ({ children, onClose, title }) => {\n  const ref = useRef(null);\n\n  const closeModal = () => {\n    document.querySelector(\"body\").classList.remove(\"overflow-hidden\");\n    onClose();\n  };\n\n  useOnClickOutside(ref, () => {\n    closeModal();\n  });\n\n  return (\n    <div\n      className=\"fixed overflow-auto flex items-center\"\n      style={{\n        backgroundColor: \"rgba(0, 0, 0, .2)\",\n        width: \"100%\",\n        height: \"100%\",\n        top: 0,\n        left: 0,\n        zIndex: 5000,\n      }}\n    >\n      <div\n        ref={ref}\n        className=\"relative p-8 border-2 border-primary rounded-md bg-white w-full max-w-md m-auto h-custom\"\n        style={{\n          minWidth: \"300px\",\n          maxWidth: \"700px\",\n        }}\n      >\n        <div className=\"flex flex-row items-center\">\n          <div className=\"text-3xl font-bold\">{title}</div>\n        </div>\n\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { useEffect } from \"react\";\n\nexport default function useOnClickOutside(ref, handler) {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, handler]);\n}\n","import React from \"react\";\r\n\r\nexport default ({ title, className, noLine, children }) => {\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-full rounded-lg card-bg pb-4\" + (className ? className : \"\")\r\n      }\r\n    >\r\n      <div className={`text-center font-Montserrat-ExtraBold text-white text-2xl uppercase pt-3 pb-2 ${noLine ? \"\" : \"border-b border-dashed border-white\"}`}>\r\n        {title}\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = ({ animationDuration, size, color }) => {\n  return (\n    <div\n      className=\"half-circle-spinner\"\n      style={{\n        height: `${size}px`,\n        width: `${size}px`,\n      }}\n    >\n      <div\n        className=\"circle circle-1\"\n        style={{\n          borderWidth: `${size / 10}px`,\n          animationDuration: `${animationDuration}ms`,\n          borderTopColor: color,\n        }}\n      />\n      <div\n        className=\"circle circle-2\"\n        style={{\n          borderWidth: `${size / 10}px`,\n          animationDuration: `${animationDuration}ms`,\n          borderBottomColor: color,\n        }}\n      />\n    </div>\n  );\n};\n\nSpinner.defaultProps = {\n  animationDuration: 1000,\n  size: 40,\n  color: \"#2c6fa5\",\n};\n\nexport default Spinner;\n","import Web3 from \"web3\";\n\nconst initWeb3 = () => {\n  return new Promise(async (resolve, reject) => {\n    if (window.ethereum) {\n      const web3 = new Web3(window.ethereum);\n      try {\n        await window.ethereum.enable();\n        resolve(web3);\n      } catch (error) {\n        reject(error);\n      }\n    } else if (window.web3) {\n      const web3 = window.web3;\n      console.log(\"Injected web3 detected.\");\n      resolve(web3);\n    } else {\n      const provider = new Web3.providers.HttpProvider(\"http://localhost:9545\");\n      const web3 = new Web3(provider);\n      console.log(\"No web3 instance injected, using Local web3.\");\n      resolve(web3);\n    }\n  });\n};\n\nexport { initWeb3 };\n","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Button from \"../components/common/Button\";\r\nimport Modal from \"../components/common/Modal\";\r\nimport Card from \"../components/common/Card\";\r\nimport Spinner from \"../components/common/Spinner\";\r\nimport { initWeb3 } from \"../utils.js\";\r\nimport LeadStake from \"../contracts/LeadStake.json\";\r\nimport ERC20 from \"../contracts/ERC20.json\";\r\nimport fromExponential from \"from-exponential\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [stakeLoading, setStakeLoading] = useState(false);\r\n  const [unstakeLoading, setUnstakeLoading] = useState(false);\r\n  const [withdrawLoading, setWithdrawLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [web3, setWeb3] = useState();\r\n  const [accounts, setAccounts] = useState();\r\n  const [leadStake, setLeadStake] = useState();\r\n  const [leadToken, setLeadToken] = useState();\r\n  const [totalSupply, setTotalSupply] = useState();\r\n  const [balance, setBalance] = useState();\r\n  const [totalStaked, setTotalStaked] = useState();\r\n  const [stakes, setStakes] = useState();\r\n  const [minStake, setMinStake] = useState();\r\n  const [stakingTax, setStakingTax] = useState();\r\n  const [unstakingTax, setUnstakingTax] = useState();\r\n  const [registrationTax, setRegistrationTax] = useState();\r\n  const [referralRewards, setReferralRewards] = useState();\r\n  const [referralCount, setReferralCount] = useState();\r\n  const [dailyROI, setDailyROI] = useState();\r\n  const [stakingRewards, setStakeRewards] = useState();\r\n  const [minRegister, setMinRegister] = useState();\r\n  const [totalRewards, setTotalRewards] = useState();\r\n  const [registeredStatus, setRegisteredStaus] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [unstakeAmount, setUnstakeAmount] = useState();\r\n  const [referrer, setReferrer] = useState();\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const init = async () => {\r\n    if (isReady()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    let web3;\r\n    try {\r\n      web3 = await initWeb3();\r\n    } catch (err) {\r\n      console.error(err);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n    const networkId = await web3.eth.net.getId();\r\n    console.log(networkId);\r\n\r\n    if (networkId !== 56) {\r\n      setError(\"Please connect BSC Mainnet\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    const leadToken = new web3.eth.Contract(\r\n      ERC20.abi,\r\n      \"0x93d5a19a993d195cfc75acdd736a994428290a59\"\r\n    ); //mainnet address for lead token\r\n    const totalSupply = await leadToken.methods.totalSupply().call();\r\n    const balance = await leadToken.methods.balanceOf(accounts[0]).call();\r\n\r\n    const leadStake = new web3.eth.Contract(\r\n      LeadStake.abi,\r\n      \"0x75e9e9Aa612811ecB2a722C55C80849A412Ddd48\"\r\n    ); //mainnet address for staking dapp\r\n    const totalStaked = await leadStake.methods.totalStaked().call();\r\n    const minStake = await leadStake.methods.minimumStakeValue().call();\r\n    const stakingTax = await leadStake.methods.stakingTaxRate().call();\r\n    const unstakingTax = await leadStake.methods.unstakingTaxRate().call();\r\n    const registrationTax = await leadStake.methods.registrationTax().call();\r\n    const referralRewards = await leadStake.methods\r\n      .referralRewards(accounts[0])\r\n      .call();\r\n    const referralCount = await leadStake.methods\r\n      .referralCount(accounts[0])\r\n      .call();\r\n    const dailyROI = await leadStake.methods.dailyROI().call();\r\n    const status = await leadStake.methods.registered(accounts[0]).call();\r\n\r\n    setWeb3(web3);\r\n    setAccounts(accounts);\r\n    setLeadStake(leadStake);\r\n    setLeadToken(leadToken);\r\n    setTotalSupply(totalSupply);\r\n    setBalance(balance);\r\n    setTotalStaked(totalStaked);\r\n    setMinStake(minStake);\r\n    setStakingTax(stakingTax);\r\n    setUnstakingTax(unstakingTax);\r\n    setRegistrationTax(registrationTax);\r\n    setReferralRewards(referralRewards);\r\n    setReferralCount(referralCount);\r\n    setDailyROI(dailyROI);\r\n    setRegisteredStaus(status);\r\n\r\n    window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n      setAccounts(accounts);\r\n    });\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const isReady = () => {\r\n    return !!leadStake && !!web3 && !!accounts;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const triggerAlreadyInjectedWeb3 = async () => {\r\n      if (window.ethereum) {\r\n        if (\r\n          window.ethereum.selectedAddress &&\r\n          window.ethereum.networkVersion === \"56\"\r\n        ) {\r\n          await init();\r\n        }\r\n      }\r\n    };\r\n    triggerAlreadyInjectedWeb3();\r\n  }, []);\r\n\r\n \r\n\r\n  async function updateAll() {\r\n    await Promise.all([\r\n      updateStakes(),\r\n      updateTotalSupply(),\r\n      updateAccountBalance(),\r\n      updateTotalStaked(),\r\n      stakeRewards(),\r\n      minRegisteration(),\r\n      totalReward(),\r\n      updateReferrals(),\r\n      updateStatus()\r\n    ]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isReady()) {\r\n      updateAll();\r\n    }\r\n  }, [leadStake, leadToken, web3, accounts]);\r\n\r\n  async function updateStakes() {\r\n    const stake = await leadStake.methods.stakes(accounts[0]).call();\r\n    setStakes(stake);\r\n    return stake;\r\n  }\r\n\r\n  async function updateReferrals() {\r\n    if (leadToken) {\r\n      const referralRewards = await leadStake.methods\r\n        .referralRewards(accounts[0])\r\n        .call();\r\n      const referralCount = await leadStake.methods\r\n        .referralCount(accounts[0])\r\n        .call();\r\n      setReferralRewards(referralRewards);\r\n      setReferralCount(referralCount);\r\n    }\r\n  }\r\n\r\n  async function updateAccountBalance() {\r\n    if (leadToken) {\r\n      const balance = await leadToken.methods.balanceOf(accounts[0]).call();\r\n      setBalance(balance);\r\n      return balance;\r\n    }\r\n  }\r\n\r\n  async function updateTotalSupply() {\r\n    if (leadToken) {\r\n      const totalSupply = await leadToken.methods.totalSupply().call();\r\n      setTotalSupply(totalSupply);\r\n      return totalSupply;\r\n    }\r\n  }\r\n\r\n  async function updateTotalStaked() {\r\n    if (leadStake) {\r\n      const totalStaked = await leadStake.methods.totalStaked().call();\r\n      return totalStaked;\r\n    }\r\n  }\r\n\r\n  async function minRegisteration() {\r\n    if (leadStake) {\r\n      const tax = parseInt(await leadStake.methods.registrationTax().call());\r\n      const value = parseInt(\r\n        await leadStake.methods.minimumStakeValue().call()\r\n      );\r\n      const sum =\r\n        parseInt(tax / 10000000000) +\r\n        parseInt(value / 10000000000);\r\n      await setMinRegister(sum);\r\n      return sum;\r\n    }\r\n  }\r\n\r\n  async function stakeRewards() {\r\n    if (leadStake) {\r\n      const rewards = parseInt(\r\n        await leadStake.methods.stakeRewards(accounts[0]).call()\r\n      );\r\n      const owing = parseInt(\r\n        await leadStake.methods.calculateEarnings(accounts[0]).call()\r\n      );\r\n      const sum = rewards + owing;\r\n      await setStakeRewards(sum);\r\n      return sum;\r\n    }\r\n  }\r\n\r\n  async function totalReward() {\r\n    const owing = parseInt(\r\n      await leadStake.methods.calculateEarnings(accounts[0]).call()\r\n    );\r\n    const recorded = parseInt(\r\n      await leadStake.methods.stakeRewards(accounts[0]).call()\r\n    );\r\n    const referral = parseInt(\r\n      await leadStake.methods.referralRewards(accounts[0]).call()\r\n    );\r\n    const sum = owing + referral + recorded;\r\n    await setTotalRewards(sum);\r\n    return sum;\r\n  }\r\n\r\n  async function updateStatus() {\r\n    if (leadToken) {\r\n      const status = await leadStake.methods.registered(accounts[0]).call();\r\n      setRegisteredStaus(status);\r\n    }\r\n  }\r\n\r\n  async function registerAndStake() {\r\n    setStakeLoading(true);\r\n    const actual = amount * 10 ** 10;\r\n    const arg = fromExponential(actual);\r\n    try {\r\n      let ref = referrer;\r\n      await leadToken.methods\r\n        .approve(\"0x75e9e9Aa612811ecB2a722C55C80849A412Ddd48\", arg)\r\n        .send({ from: accounts[0] });\r\n      if (!ref || ref.length !== 42)\r\n        ref = \"0x0000000000000000000000000000000000000000\";\r\n      await leadStake.methods\r\n        .registerAndStake(arg, ref)\r\n        .send({ from: accounts[0] });\r\n      await updateAll();\r\n    } catch (err) {\r\n      if (err.code !== 4001) {\r\n        setShowModal(true);\r\n      }\r\n      console.error(err);\r\n    }\r\n    setStakeLoading(false);\r\n  }\r\n\r\n  async function stake() {\r\n    setStakeLoading(true);\r\n    const actual = amount * 10 ** 10;\r\n    const arg = fromExponential(actual);\r\n    try {\r\n      await leadToken.methods\r\n        .approve(\"0x75e9e9Aa612811ecB2a722C55C80849A412Ddd48\", arg)\r\n        .send({ from: accounts[0] });\r\n\r\n      await leadStake.methods.stake(arg).send({ from: accounts[0] });\r\n      await updateAll();\r\n    } catch (err) {\r\n      if (err.code !== 4001) {\r\n        setShowModal(true);\r\n      }\r\n      console.error(err);\r\n    }\r\n    setStakeLoading(false);\r\n  }\r\n\r\n  async function unstake() {\r\n    if (parseFloat(stakes) === 0) {\r\n      console.error(\"You don't have any staked Oreos yet!\");\r\n      return;\r\n    }\r\n    setUnstakeLoading(true);\r\n    const actual = unstakeAmount * 10 ** 10;\r\n    const arg = fromExponential(actual);\r\n    try {\r\n      await leadStake.methods.unstake(arg).send({ from: accounts[0] });\r\n      await updateAll();\r\n    } catch (err) {\r\n      if (err.code !== 4001) {\r\n        setShowModal(true);\r\n      }\r\n      console.error(err);\r\n    }\r\n    setUnstakeLoading(false);\r\n  }\r\n\r\n  async function withdrawEarnings() {\r\n    if (parseFloat(totalRewards) === 0) {\r\n      console.error(\"No earnings yet!\");\r\n      return;\r\n    }\r\n    setWithdrawLoading(true);\r\n    try {\r\n      await leadStake.methods.withdrawEarnings().send({ from: accounts[0] });\r\n      await updateAll();\r\n    } catch (err) {\r\n      if (err.code !== 4001) {\r\n        setShowModal(true);\r\n      }\r\n      console.error(err);\r\n    }\r\n    setWithdrawLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full overflow-hidden\">\r\n      {showModal && (\r\n        <Modal title=\"\" onClose={() => setShowModal(false)}>\r\n          <div className=\"text-2xl mb-2\">\r\n            Error! Your transaction has been reverted!\r\n          </div>\r\n          <div>1. Please check your account and retry again...</div>\r\n          <div>2. Your referrer's address is a registered member if any</div>\r\n\r\n          <div className=\"my-2\">\r\n            Thanks for your support and feel free to{\" \"}\r\n            <a href=\"#\" className=\"text-blue-500\">\r\n              contact us\r\n            </a>\r\n          </div>\r\n\r\n          <div className=\"flex flex-row justify-center\">\r\n            <Button onClick={() => setShowModal(false)}>Close</Button>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n      <div className=\"relative z-20 w-full top-0\">\r\n        <img\r\n          src=\"/images/nosiy.png\"\r\n          alt=\"\"\r\n          className=\"absolute z-10 top-noisy\"\r\n        />\r\n        <img\r\n          src=\"/images/nosiy.png\"\r\n          alt=\"\"\r\n          className=\"absolute z-10 second-noisy\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"relative z-10 w-full top-0\">\r\n        <div className=\"absolute w-full home-gradient\"></div>\r\n      </div>\r\n\r\n      <div className=\"relative w-full z-30\">\r\n        <Header />\r\n\r\n        <div className=\"container mx-auto pb-18 px-4 force-height\">\r\n          {!accounts && (\r\n            <div className=\"w-full py-6 text-center\">\r\n                 <div id='controls'>\r\n        <Link id='toggler' to='/' >Switch To Ethereum Chain</  Link>\r\n\r\n    </div>\r\n              <Button\r\n                className=\"w-full md:w-2/5 text-2xl flex flex-row justify-center mx-auto\"\r\n                uppercase={false}\r\n                onClick={async () => await init()}\r\n              >\r\n                {loading && <Spinner color=\"white\" size={40} />}\r\n                {!loading && (error !== \"\" ? error : \"CONNECT METAMASK WALLET\")}\r\n              </Button>\r\n\r\n              <div className=\"text-white text-center mt-6 text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold\">\r\n                <h1>Oreo Staking</h1>\r\n              </div>\r\n              <div className=\"w-full md:w-3/6 justify-center mx-auto mt-6\">\r\n                <Card title=\"Rules\">\r\n                  <div className=\"flex flex-col pt-8 pb-4 text-white text-center\">\r\n                    <ul>\r\n                      <li>1. Connect your MetaMask wallet to participate</li>\r\n                      <li>\r\n                        2. Stake  tokens and earn daily returns from\r\n                        allocated pool\r\n                      </li>\r\n                      <li>3. Withdraw earned rewards anytime</li>\r\n                      <li>4. Unstake  tokens anytime</li>\r\n                      <li>5. Earn extra rewards by referring new members</li>\r\n                    </ul>\r\n                  </div>\r\n                </Card>\r\n                <div className=\"flex flex-col pt-8 px-2\">\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                </div>\r\n                <Card noLine>\r\n                  <div className=\"flex flex-col px-2\">\r\n                    <div className=\"text-center pb-4\">\r\n                      <div className=\"text-white text-xs\">\r\n                        <span className=\"text-blue-500\">Disclaimer</span>{\" \"}\r\n                        Staking Smart Contract was audited by{\" \"}\r\n                        <a\r\n                          href=\"https://immunebytes.com/\"\r\n                          target=\"_blank\"\r\n                          className=\"text-blue-500\"\r\n                        >\r\n                          Immune Bytes\r\n                        </a>\r\n                        . Keep in mind that security audits don't fully\r\n                        eliminate all possible security risks. Use our staking\r\n                        page at your own risk. <br />\r\n                        <span className=\"text-blue-500\">Note</span> The Stake\r\n                        Rewards can be reduced without prior warning, stakers\r\n                        are advised to claim their rewards daily.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {accounts && (\r\n            <div className=\"grid grid-col-1 md:grid-cols-2 gap-6 mt-10\">\r\n              <Card title=\"Total Staked Oreo\">\r\n                <div className=\"flex flex-col pt-8 pb-4 text-white\">\r\n                  <div className=\"text-center\">\r\n                    <span className=\"text-white text-5xl\">\r\n                      {(\r\n                        parseFloat(totalStaked).toFixed(2) / 10000000000\r\n                      ).toFixed(2)}\r\n                    </span>\r\n                    <span className=\"text-white text-2xl ml-2\">Oreo</span>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    {(\r\n                      (parseFloat(totalStaked) * 100.0) /\r\n                      parseFloat(totalSupply)\r\n                    ).toFixed(5)}\r\n                    %\r\n                  </div>\r\n                  <div className=\"text-center\">of total supply</div>\r\n                </div>\r\n              </Card>\r\n              <Card title=\"Fees\">\r\n                <div className=\"flex flex-col pt-8 px-2\">\r\n                  <div className=\"text-center pb-8\">\r\n                    <div className=\"text-gray-400 text-lg font-thin\">\r\n                      <ul>\r\n                        <li>\r\n                          Registration Fee:{\"  \"}\r\n                          <span className=\"text-white text-2xl\">\r\n                            {parseInt(registrationTax) / 10000000000}{\" \"}\r\n                            Oreo\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          Staking Fee:{\"  \"}\r\n                          <span className=\"text-white text-2xl\">\r\n                            {parseFloat(stakingTax) / 10} %\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          Unstaking Fee:{\"  \"}\r\n                          <span className=\"text-white text-2xl\">\r\n                            {parseFloat(unstakingTax) / 10} %\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          Minimum Stake:{\"  \"}\r\n                          <span className=\"text-white text-2xl\">\r\n                            {parseInt(minStake) / 10000000000} Oreo\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n              {!registeredStatus ? (\r\n                <Card title=\"Staking\">\r\n                  <div className=\"flex flex-col pt-8 px-2\">\r\n                    <div className=\"text-center pb-4\">\r\n                      <span className=\"text-lg text-gray-400\">\r\n                        Minimum amount needed:{\" \"}\r\n                      </span>\r\n                      <span className=\"text-white text-3xl\">\r\n                        {parseInt(minRegister)}\r\n                      </span>\r\n                      <span className=\"text-white text-2xl ml-2\">Oreo</span>\r\n                    </div>\r\n                    <div className=\"text-center pb-4\">\r\n                      <span className=\"text-lg text-gray-400\">\r\n                        Available amount:{\" \"}\r\n                      </span>\r\n                      <span className=\"text-white text-3xl\">\r\n                        {parseInt(parseInt(balance) / 10000000000)}\r\n                      </span>\r\n                      <span className=\"text-white text-2xl ml-2\">Oreo</span>\r\n                    </div>\r\n                    <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\"Oreo To Stake\"\r\n                        value={amount}\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                        className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\r\n                      />\r\n                      <Button\r\n                        onClick={() => registerAndStake()}\r\n                        className=\"flex flex-row items-center w-48 justify-center\"\r\n                      >\r\n                        {stakeLoading ? (\r\n                          <Spinner size={30} />\r\n                        ) : (\r\n                          <>\r\n                            <img src=\"/images/locked.svg\" width=\"25\" alt=\"\" />\r\n                            <span className=\"w-16\">STAKE</span>{\" \"}\r\n                          </>\r\n                        )}\r\n                      </Button>\r\n                    </div>\r\n                    <div className=\"text-white text-center mt-4\">\r\n                      Has referrer's address?\r\n                    </div>\r\n                    <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\r\n                      <input\r\n                        placeholder=\"Referrer Address\"\r\n                        value={referrer}\r\n                        onChange={(e) => setReferrer(e.target.value)}\r\n                        className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              ) : (\r\n                <Card title=\"Staking\">\r\n                  <div className=\"flex flex-col pt-8 px-2\">\r\n                    <div className=\"text-center pb-4\">\r\n                      <span className=\"text-lg text-gray-400\">\r\n                        Minimum amount needed:{\" \"}\r\n                      </span>\r\n                      <span className=\"text-white text-3xl\">\r\n                        {parseInt(minStake) / 10000000000}\r\n                      </span>\r\n                      <span className=\"text-white text-2xl ml-2\">Oreo/</span>\r\n                    </div>\r\n                    <div className=\"text-center pb-4\">\r\n                      <span className=\"text-lg text-gray-400\">\r\n                        Available amount:{\" \"}\r\n                      </span>\r\n                      <span className=\"text-white text-3xl\">\r\n                        {parseInt(parseInt(balance) / 10000000000)}\r\n                      </span>\r\n                      <span className=\"text-white text-2xl ml-2\">Oreo</span>\r\n                    </div>\r\n                    <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\"Oreo To Stake\"\r\n                        value={amount}\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                        className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\r\n                      />\r\n                      <Button\r\n                        onClick={() => stake()}\r\n                        className=\"flex flex-row items-center w-48 justify-center\"\r\n                      >\r\n                        {stakeLoading ? (\r\n                          <Spinner size={30} />\r\n                        ) : (\r\n                          <>\r\n                            <img src=\"/images/locked.svg\" width=\"25\" alt=\"\" />\r\n                            <span className=\"w-16\">STAKE</span>{\" \"}\r\n                          </>\r\n                        )}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              )}\r\n              <Card title=\"Your Earnings\">\r\n                <div className=\"flex flex-col pt-8 px-2\">\r\n                  <div className=\"text-center pb-8\">\r\n                    <span className=\"text-white text-5xl\">\r\n                      {(parseFloat(totalRewards) / 10000000000).toFixed(\r\n                        2\r\n                      )}\r\n                    </span>\r\n                    <span className=\"text-white text-2xl ml-2\">Oreo</span>\r\n                  </div>\r\n                  <div className=\"flex flex-row justify-center\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"flex flex-row items-center justify-center w-32\"\r\n                      onClick={() => withdrawEarnings()}\r\n                    >\r\n                      {withdrawLoading ? (\r\n                        <Spinner size={30} />\r\n                      ) : (\r\n                        <>\r\n                          <img src=\"/images/unlocked.svg\" width=\"25\" alt=\"\" />\r\n                          <span className=\"w-24\">CLAIM</span>{\" \"}\r\n                        </>\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"text-center text-white text-2xl mt-8 mx-2\">\r\n                    <div>\r\n                      <div>\r\n                        <span className=\"text-gray-400 text-lg\">\r\n                          Staking Reward:{\" \"}\r\n                        </span>\r\n                        {parseFloat(stakingRewards) / 10000000000} Oreo\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-gray-400 text-lg\">\r\n                          Daily Return:{\" \"}\r\n                        </span>\r\n                        {parseFloat(dailyROI) / 100} %\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <div>\r\n                        <span className=\"text-gray-400 text-lg\">\r\n                          Referral Reward:\r\n                        </span>{\" \"}\r\n                        {parseFloat(referralRewards) / 10000000000} Oreo\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-gray-400 text-lg\">\r\n                          Referral Count:\r\n                        </span>{\" \"}\r\n                        {referralCount}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n              <Card title=\"Unstaking\">\r\n                <div className=\"flex flex-col pt-8 px-2\">\r\n                  <div className=\"text-center pb-4\">\r\n                    <span className=\"text-lg text-gray-400\">\r\n                      Available to unstake:{\" \"}\r\n                    </span>\r\n                    <span className=\"text-white text-3xl\">\r\n                      {(parseFloat(stakes) / 10000000000).toFixed()}\r\n                    </span>\r\n                    <span className=\"text-white text-2xl ml-2\">Oreo</span>\r\n                  </div>\r\n                  <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\r\n                    <input\r\n                      type=\"number\"\r\n                      placeholder=\"Oreo To Unstake\"\r\n                      value={unstakeAmount}\r\n                      onChange={(e) => setUnstakeAmount(e.target.value)}\r\n                      className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\r\n                    />\r\n                    <Button\r\n                      onClick={() => unstake()}\r\n                      className=\"flex flex-row items-center w-48 justify-center\"\r\n                    >\r\n                      {unstakeLoading ? (\r\n                        <Spinner size={30} />\r\n                      ) : (\r\n                        <>\r\n                          <img src=\"/images/unlocked.svg\" width=\"25\" alt=\"\" />\r\n                          <span className=\"w-24\">UNSTAKE</span>\r\n                        </>\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\n","\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Button from \"../components/common/Button\";\nimport Modal from \"../components/common/Modal\";\nimport Card from \"../components/common/Card\";\nimport Spinner from \"../components/common/Spinner\";\nimport { initWeb3 } from \"../utils.js\";\nimport LeadStake from \"../contracts/LeadStake.json\";\nimport ERC20 from \"../contracts/ERC20.json\";\nimport fromExponential from \"from-exponential\";\nimport {Link} from \"react-router-dom\";\n\nconst HomePage = () => {\n  const [loading, setLoading] = useState(false);\n  const [stakeLoading, setStakeLoading] = useState(false);\n  const [unstakeLoading, setUnstakeLoading] = useState(false);\n  const [withdrawLoading, setWithdrawLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [web3, setWeb3] = useState();\n  const [accounts, setAccounts] = useState();\n  const [leadStake, setLeadStake] = useState();\n  const [leadToken, setLeadToken] = useState();\n  const [totalSupply, setTotalSupply] = useState();\n  const [balance, setBalance] = useState();\n  const [totalStaked, setTotalStaked] = useState();\n  const [stakes, setStakes] = useState();\n  const [minStake, setMinStake] = useState();\n  const [stakingTax, setStakingTax] = useState();\n  const [unstakingTax, setUnstakingTax] = useState();\n  const [registrationTax, setRegistrationTax] = useState();\n  const [referralRewards, setReferralRewards] = useState();\n  const [referralCount, setReferralCount] = useState();\n  const [dailyROI, setDailyROI] = useState();\n  const [stakingRewards, setStakeRewards] = useState();\n  const [minRegister, setMinRegister] = useState();\n  const [totalRewards, setTotalRewards] = useState();\n  const [registeredStatus, setRegisteredStaus] = useState();\n  const [amount, setAmount] = useState();\n  const [unstakeAmount, setUnstakeAmount] = useState();\n  const [referrer, setReferrer] = useState();\n  const [showModal, setShowModal] = useState(false);\n\n  const init = async () => {\n    if (isReady()) {\n      return;\n    }\n\n    setLoading(true);\n    let web3;\n    try {\n      web3 = await initWeb3();\n    } catch (err) {\n      console.error(err);\n      setLoading(false);\n      return;\n    }\n\n    const accounts = await web3.eth.getAccounts();\n    const networkId = await web3.eth.net.getId();\n    console.log(networkId);\n\n    if (networkId !== 56) {\n      setError(\"Please connect BSC Mainnet\");\n      setLoading(false);\n      return;\n    }\n    const leadToken = new web3.eth.Contract(\n      ERC20.abi,\n      \"0x93d5a19a993d195cfc75acdd736a994428290a59\"\n    ); //mainnet address for lead token\n    const totalSupply = await leadToken.methods.totalSupply().call();\n    const balance = await leadToken.methods.balanceOf(accounts[0]).call();\n\n    const leadStake = new web3.eth.Contract(\n      LeadStake.abi,\n      \"0x75e9e9Aa612811ecB2a722C55C80849A412Ddd48\"\n    ); //mainnet address for staking dapp\n    const totalStaked = await leadStake.methods.totalStaked().call();\n    const minStake = await leadStake.methods.minimumStakeValue().call();\n    const stakingTax = await leadStake.methods.stakingTaxRate().call();\n    const unstakingTax = await leadStake.methods.unstakingTaxRate().call();\n    const registrationTax = await leadStake.methods.registrationTax().call();\n    const referralRewards = await leadStake.methods\n      .referralRewards(accounts[0])\n      .call();\n    const referralCount = await leadStake.methods\n      .referralCount(accounts[0])\n      .call();\n    const dailyROI = await leadStake.methods.dailyROI().call();\n    const status = await leadStake.methods.registered(accounts[0]).call();\n\n    setWeb3(web3);\n    setAccounts(accounts);\n    setLeadStake(leadStake);\n    setLeadToken(leadToken);\n    setTotalSupply(totalSupply);\n    setBalance(balance);\n    setTotalStaked(totalStaked);\n    setMinStake(minStake);\n    setStakingTax(stakingTax);\n    setUnstakingTax(unstakingTax);\n    setRegistrationTax(registrationTax);\n    setReferralRewards(referralRewards);\n    setReferralCount(referralCount);\n    setDailyROI(dailyROI);\n    setRegisteredStaus(status);\n\n    window.ethereum.on(\"accountsChanged\", (accounts) => {\n      setAccounts(accounts);\n    });\n\n    setLoading(false);\n  };\n\n  const isReady = () => {\n    return !!leadStake && !!web3 && !!accounts;\n  };\n\n  useEffect(() => {\n    const triggerAlreadyInjectedWeb3 = async () => {\n      if (window.ethereum) {\n        if (\n          window.ethereum.selectedAddress &&\n          window.ethereum.networkVersion === \"56\"\n        ) {\n          await init();\n        }\n      }\n    };\n    triggerAlreadyInjectedWeb3();\n  }, []);\n\n \n\n  async function updateAll() {\n    await Promise.all([\n      updateStakes(),\n      updateTotalSupply(),\n      updateAccountBalance(),\n      updateTotalStaked(),\n      stakeRewards(),\n      minRegisteration(),\n      totalReward(),\n      updateReferrals(),\n      updateStatus()\n    ]);\n  }\n\n  useEffect(() => {\n    if (isReady()) {\n      updateAll();\n    }\n  }, [leadStake, leadToken, web3, accounts]);\n\n  async function updateStakes() {\n    const stake = await leadStake.methods.stakes(accounts[0]).call();\n    setStakes(stake);\n    return stake;\n  }\n\n  async function updateReferrals() {\n    if (leadToken) {\n      const referralRewards = await leadStake.methods\n        .referralRewards(accounts[0])\n        .call();\n      const referralCount = await leadStake.methods\n        .referralCount(accounts[0])\n        .call();\n      setReferralRewards(referralRewards);\n      setReferralCount(referralCount);\n    }\n  }\n\n  async function updateAccountBalance() {\n    if (leadToken) {\n      const balance = await leadToken.methods.balanceOf(accounts[0]).call();\n      setBalance(balance);\n      return balance;\n    }\n  }\n\n  async function updateTotalSupply() {\n    if (leadToken) {\n      const totalSupply = await leadToken.methods.totalSupply().call();\n      setTotalSupply(totalSupply);\n      return totalSupply;\n    }\n  }\n\n  async function updateTotalStaked() {\n    if (leadStake) {\n      const totalStaked = await leadStake.methods.totalStaked().call();\n      return totalStaked;\n    }\n  }\n\n  async function minRegisteration() {\n    if (leadStake) {\n      const tax = parseInt(await leadStake.methods.registrationTax().call());\n      const value = parseInt(\n        await leadStake.methods.minimumStakeValue().call()\n      );\n      const sum =\n        parseInt(tax / 10000000000) +\n        parseInt(value / 10000000000);\n      await setMinRegister(sum);\n      return sum;\n    }\n  }\n\n  async function stakeRewards() {\n    if (leadStake) {\n      const rewards = parseInt(\n        await leadStake.methods.stakeRewards(accounts[0]).call()\n      );\n      const owing = parseInt(\n        await leadStake.methods.calculateEarnings(accounts[0]).call()\n      );\n      const sum = rewards + owing;\n      await setStakeRewards(sum);\n      return sum;\n    }\n  }\n\n  async function totalReward() {\n    const owing = parseInt(\n      await leadStake.methods.calculateEarnings(accounts[0]).call()\n    );\n    const recorded = parseInt(\n      await leadStake.methods.stakeRewards(accounts[0]).call()\n    );\n    const referral = parseInt(\n      await leadStake.methods.referralRewards(accounts[0]).call()\n    );\n    const sum = owing + referral + recorded;\n    await setTotalRewards(sum);\n    return sum;\n  }\n\n  async function updateStatus() {\n    if (leadToken) {\n      const status = await leadStake.methods.registered(accounts[0]).call();\n      setRegisteredStaus(status);\n    }\n  }\n\n  async function registerAndStake() {\n    setStakeLoading(true);\n    const actual = amount * 10 ** 10;\n    const arg = fromExponential(actual);\n    try {\n      let ref = referrer;\n      await leadToken.methods\n        .approve(\"0x75e9e9Aa612811ecB2a722C55C80849A412Ddd48\", arg)\n        .send({ from: accounts[0] });\n      if (!ref || ref.length !== 42)\n        ref = \"0x0000000000000000000000000000000000000000\";\n      await leadStake.methods\n        .registerAndStake(arg, ref)\n        .send({ from: accounts[0] });\n      await updateAll();\n    } catch (err) {\n      if (err.code !== 4001) {\n        setShowModal(true);\n      }\n      console.error(err);\n    }\n    setStakeLoading(false);\n  }\n\n  async function stake() {\n    setStakeLoading(true);\n    const actual = amount * 10 ** 10;\n    const arg = fromExponential(actual);\n    try {\n      await leadToken.methods\n        .approve(\"0x75e9e9Aa612811ecB2a722C55C80849A412Ddd48\", arg)\n        .send({ from: accounts[0] });\n\n      await leadStake.methods.stake(arg).send({ from: accounts[0] });\n      await updateAll();\n    } catch (err) {\n      if (err.code !== 4001) {\n        setShowModal(true);\n      }\n      console.error(err);\n    }\n    setStakeLoading(false);\n  }\n\n  async function unstake() {\n    if (parseFloat(stakes) === 0) {\n      console.error(\"You don't have any staked Oreos yet!\");\n      return;\n    }\n    setUnstakeLoading(true);\n    const actual = unstakeAmount * 10 ** 10;\n    const arg = fromExponential(actual);\n    try {\n      await leadStake.methods.unstake(arg).send({ from: accounts[0] });\n      await updateAll();\n    } catch (err) {\n      if (err.code !== 4001) {\n        setShowModal(true);\n      }\n      console.error(err);\n    }\n    setUnstakeLoading(false);\n  }\n\n  async function withdrawEarnings() {\n    if (parseFloat(totalRewards) === 0) {\n      console.error(\"No earnings yet!\");\n      return;\n    }\n    setWithdrawLoading(true);\n    try {\n      await leadStake.methods.withdrawEarnings().send({ from: accounts[0] });\n      await updateAll();\n    } catch (err) {\n      if (err.code !== 4001) {\n        setShowModal(true);\n      }\n      console.error(err);\n    }\n    setWithdrawLoading(false);\n  }\n\n  return (\n    <div className=\"w-full overflow-hidden\">\n      {showModal && (\n        <Modal title=\"\" onClose={() => setShowModal(false)}>\n          <div className=\"text-2xl mb-2\">\n            Error! Your transaction has been reverted!\n          </div>\n          <div>1. Please check your account and retry again...</div>\n          <div>2. Your referrer's address is a registered member if any</div>\n\n          <div className=\"my-2\">\n            Thanks for your support and feel free to{\" \"}\n            <a href=\"#\" className=\"text-blue-500\">\n              contact us\n            </a>\n          </div>\n\n          <div className=\"flex flex-row justify-center\">\n            <Button onClick={() => setShowModal(false)}>Close</Button>\n          </div>\n        </Modal>\n      )}\n      <div className=\"relative z-20 w-full top-0\">\n        <img\n          src=\"/images/nosiy.png\"\n          alt=\"\"\n          className=\"absolute z-10 top-noisy\"\n        />\n        <img\n          src=\"/images/nosiy.png\"\n          alt=\"\"\n          className=\"absolute z-10 second-noisy\"\n        />\n      </div>\n\n      <div className=\"relative z-10 w-full top-0\">\n        <div className=\"absolute w-full home-gradient\"></div>\n      </div>\n\n      <div className=\"relative w-full z-30\">\n        <Header />\n\n        <div className=\"container mx-auto pb-18 px-4 force-height\">\n          {!accounts && (\n            <div className=\"w-full py-6 text-center\">\n                 <div id='controls'>\n        <Link id='toggler' to='/' >Switch To Ethereum Chain</  Link>\n\n    </div>\n              <Button\n                className=\"w-full md:w-2/5 text-2xl flex flex-row justify-center mx-auto\"\n                uppercase={false}\n                onClick={async () => await init()}\n              >\n                {loading && <Spinner color=\"white\" size={40} />}\n                {!loading && (error !== \"\" ? error : \"CONNECT METAMASK WALLET\")}\n              </Button>\n\n              <div className=\"text-white text-center mt-6 text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold\">\n                <h1>Oreo Staking</h1>\n              </div>\n              <div className=\"w-full md:w-3/6 justify-center mx-auto mt-6\">\n                <Card title=\"Rules\">\n                  <div className=\"flex flex-col pt-8 pb-4 text-white text-center\">\n                    <ul>\n                      <li>1. Connect your MetaMask wallet to participate</li>\n                      <li>\n                        2. Stake  tokens and earn daily returns from\n                        allocated pool\n                      </li>\n                      <li>3. Withdraw earned rewards anytime</li>\n                      <li>4. Unstake  tokens anytime</li>\n                      <li>5. Earn extra rewards by referring new members</li>\n                    </ul>\n                  </div>\n                </Card>\n                <div className=\"flex flex-col pt-8 px-2\">\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                </div>\n                <Card noLine>\n                  <div className=\"flex flex-col px-2\">\n                    <div className=\"text-center pb-4\">\n                      <div className=\"text-white text-xs\">\n                        <span className=\"text-blue-500\">Disclaimer</span>{\" \"}\n                        Staking Smart Contract was audited by{\" \"}\n                        <a\n                          href=\"https://immunebytes.com/\"\n                          target=\"_blank\"\n                          className=\"text-blue-500\"\n                        >\n                          Immune Bytes\n                        </a>\n                        . Keep in mind that security audits don't fully\n                        eliminate all possible security risks. Use our staking\n                        page at your own risk. <br />\n                        <span className=\"text-blue-500\">Note</span> The Stake\n                        Rewards can be reduced without prior warning, stakers\n                        are advised to claim their rewards daily.\n                      </div>\n                    </div>\n                  </div>\n                </Card>\n              </div>\n            </div>\n          )}\n          {accounts && (\n            <div className=\"grid grid-col-1 md:grid-cols-2 gap-6 mt-10\">\n              <Card title=\"Total Staked Oreo\">\n                <div className=\"flex flex-col pt-8 pb-4 text-white\">\n                  <div className=\"text-center\">\n                    <span className=\"text-white text-5xl\">\n                      {(\n                        parseFloat(totalStaked).toFixed(2) / 10000000000\n                      ).toFixed(2)}\n                    </span>\n                    <span className=\"text-white text-2xl ml-2\">Oreo</span>\n                  </div>\n                  <div className=\"text-center\">\n                    {(\n                      (parseFloat(totalStaked) * 100.0) /\n                      parseFloat(totalSupply)\n                    ).toFixed(5)}\n                    %\n                  </div>\n                  <div className=\"text-center\">of total supply</div>\n                </div>\n              </Card>\n              <Card title=\"Fees\">\n                <div className=\"flex flex-col pt-8 px-2\">\n                  <div className=\"text-center pb-8\">\n                    <div className=\"text-gray-400 text-lg font-thin\">\n                      <ul>\n                        <li>\n                          Registration Fee:{\"  \"}\n                          <span className=\"text-white text-2xl\">\n                            {parseInt(registrationTax) / 10000000000}{\" \"}\n                            Oreo\n                          </span>\n                        </li>\n                        <li>\n                          Staking Fee:{\"  \"}\n                          <span className=\"text-white text-2xl\">\n                            {parseFloat(stakingTax) / 10} %\n                          </span>\n                        </li>\n                        <li>\n                          Unstaking Fee:{\"  \"}\n                          <span className=\"text-white text-2xl\">\n                            {parseFloat(unstakingTax) / 10} %\n                          </span>\n                        </li>\n                        <li>\n                          Minimum Stake:{\"  \"}\n                          <span className=\"text-white text-2xl\">\n                            {parseInt(minStake) / 10000000000} Oreo\n                          </span>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n              {!registeredStatus ? (\n                <Card title=\"Staking\">\n                  <div className=\"flex flex-col pt-8 px-2\">\n                    <div className=\"text-center pb-4\">\n                      <span className=\"text-lg text-gray-400\">\n                        Minimum amount needed:{\" \"}\n                      </span>\n                      <span className=\"text-white text-3xl\">\n                        {parseInt(minRegister)}\n                      </span>\n                      <span className=\"text-white text-2xl ml-2\">Oreo</span>\n                    </div>\n                    <div className=\"text-center pb-4\">\n                      <span className=\"text-lg text-gray-400\">\n                        Available amount:{\" \"}\n                      </span>\n                      <span className=\"text-white text-3xl\">\n                        {parseInt(parseInt(balance) / 10000000000)}\n                      </span>\n                      <span className=\"text-white text-2xl ml-2\">Oreo</span>\n                    </div>\n                    <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\n                      <input\n                        type=\"number\"\n                        placeholder=\"Oreo To Stake\"\n                        value={amount}\n                        onChange={(e) => setAmount(e.target.value)}\n                        className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\n                      />\n                      <Button\n                        onClick={() => registerAndStake()}\n                        className=\"flex flex-row items-center w-48 justify-center\"\n                      >\n                        {stakeLoading ? (\n                          <Spinner size={30} />\n                        ) : (\n                          <>\n                            <img src=\"/images/locked.svg\" width=\"25\" alt=\"\" />\n                            <span className=\"w-16\">STAKE</span>{\" \"}\n                          </>\n                        )}\n                      </Button>\n                    </div>\n                    <div className=\"text-white text-center mt-4\">\n                      Has referrer's address?\n                    </div>\n                    <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\n                      <input\n                        placeholder=\"Referrer Address\"\n                        value={referrer}\n                        onChange={(e) => setReferrer(e.target.value)}\n                        className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\n                      />\n                    </div>\n                  </div>\n                </Card>\n              ) : (\n                <Card title=\"Staking\">\n                  <div className=\"flex flex-col pt-8 px-2\">\n                    <div className=\"text-center pb-4\">\n                      <span className=\"text-lg text-gray-400\">\n                        Minimum amount needed:{\" \"}\n                      </span>\n                      <span className=\"text-white text-3xl\">\n                        {parseInt(minStake) / 10000000000}\n                      </span>\n                      <span className=\"text-white text-2xl ml-2\">Oreo/</span>\n                    </div>\n                    <div className=\"text-center pb-4\">\n                      <span className=\"text-lg text-gray-400\">\n                        Available amount:{\" \"}\n                      </span>\n                      <span className=\"text-white text-3xl\">\n                        {parseInt(parseInt(balance) / 10000000000)}\n                      </span>\n                      <span className=\"text-white text-2xl ml-2\">Oreo</span>\n                    </div>\n                    <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\n                      <input\n                        type=\"number\"\n                        placeholder=\"Oreo To Stake\"\n                        value={amount}\n                        onChange={(e) => setAmount(e.target.value)}\n                        className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\n                      />\n                      <Button\n                        onClick={() => stake()}\n                        className=\"flex flex-row items-center w-48 justify-center\"\n                      >\n                        {stakeLoading ? (\n                          <Spinner size={30} />\n                        ) : (\n                          <>\n                            <img src=\"/images/locked.svg\" width=\"25\" alt=\"\" />\n                            <span className=\"w-16\">STAKE</span>{\" \"}\n                          </>\n                        )}\n                      </Button>\n                    </div>\n                  </div>\n                </Card>\n              )}\n              <Card title=\"Your Earnings\">\n                <div className=\"flex flex-col pt-8 px-2\">\n                  <div className=\"text-center pb-8\">\n                    <span className=\"text-white text-5xl\">\n                      {(parseFloat(totalRewards) / 10000000000).toFixed(\n                        2\n                      )}\n                    </span>\n                    <span className=\"text-white text-2xl ml-2\">Oreo</span>\n                  </div>\n                  <div className=\"flex flex-row justify-center\">\n                    <Button\n                      type=\"submit\"\n                      className=\"flex flex-row items-center justify-center w-32\"\n                      onClick={() => withdrawEarnings()}\n                    >\n                      {withdrawLoading ? (\n                        <Spinner size={30} />\n                      ) : (\n                        <>\n                          <img src=\"/images/unlocked.svg\" width=\"25\" alt=\"\" />\n                          <span className=\"w-24\">CLAIM</span>{\" \"}\n                        </>\n                      )}\n                    </Button>\n                  </div>\n                  <div className=\"text-center text-white text-2xl mt-8 mx-2\">\n                    <div>\n                      <div>\n                        <span className=\"text-gray-400 text-lg\">\n                          Staking Reward:{\" \"}\n                        </span>\n                        {parseFloat(stakingRewards) / 10000000000} Oreo\n                      </div>\n                      <div>\n                        <span className=\"text-gray-400 text-lg\">\n                          Daily Return:{\" \"}\n                        </span>\n                        {parseFloat(dailyROI) / 100} %\n                      </div>\n                    </div>\n                    <div>\n                      <div>\n                        <span className=\"text-gray-400 text-lg\">\n                          Referral Reward:\n                        </span>{\" \"}\n                        {parseFloat(referralRewards) / 10000000000} Oreo\n                      </div>\n                      <div>\n                        <span className=\"text-gray-400 text-lg\">\n                          Referral Count:\n                        </span>{\" \"}\n                        {referralCount}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n              <Card title=\"Unstaking\">\n                <div className=\"flex flex-col pt-8 px-2\">\n                  <div className=\"text-center pb-4\">\n                    <span className=\"text-lg text-gray-400\">\n                      Available to unstake:{\" \"}\n                    </span>\n                    <span className=\"text-white text-3xl\">\n                      {(parseFloat(stakes) / 10000000000).toFixed()}\n                    </span>\n                    <span className=\"text-white text-2xl ml-2\">Oreo</span>\n                  </div>\n                  <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\n                    <input\n                      type=\"number\"\n                      placeholder=\"Oreo To Unstake\"\n                      value={unstakeAmount}\n                      onChange={(e) => setUnstakeAmount(e.target.value)}\n                      className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\n                    />\n                    <Button\n                      onClick={() => unstake()}\n                      className=\"flex flex-row items-center w-48 justify-center\"\n                    >\n                      {unstakeLoading ? (\n                        <Spinner size={30} />\n                      ) : (\n                        <>\n                          <img src=\"/images/unlocked.svg\" width=\"25\" alt=\"\" />\n                          <span className=\"w-24\">UNSTAKE</span>\n                        </>\n                      )}\n                    </Button>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          )}\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n\n","import React,{useState} from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport StakingPage from \"./pages/StakingPage\";\r\nimport StakingPage2 from \"./pages/StakingPage2\";\r\n\r\nconst App = () => {\r\n\r\n\r\n  return (\r\n    <>\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <StakingPage  />\r\n      </Route>\r\n      <Route path=\"/bsc\" exact>\r\n        <StakingPage2  />\r\n      </Route>\r\n    </Switch>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import \"./styles/tailwind.css\";\r\nimport \"./styles/index.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}